{
  "hash": "d11b499c879bd61cd96479e51aecd0a1",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Assignment 2: Spatial Analysis and Visualization\"\nsubtitle: \"Healthcare Access and Equity in Pennsylvania\"\nauthor: \"Sujan Kakumanu\"\ndate: 10-13-2025\nformat: \n  html:\n    code-fold: false\n    toc: true\n    toc-location: left\n    theme: cosmo\n    embed-resources: true\nexecute:\n  warning: false\n  message: false\n---\n\n## Assignment Overview\n\n**Learning Objectives:**\n- Apply spatial operations to answer policy-relevant research questions\n- Integrate census demographic data with spatial analysis\n- Create publication-quality visualizations and maps\n- Work with spatial data from multiple sources\n- Communicate findings effectively for policy audiences\n\n---\n\n## Part 1: Healthcare Access for Vulnerable Populations\n\n### Research Question\n\n**Which Pennsylvania counties have the highest proportion of vulnerable populations (elderly + low-income) living far from hospitals?**\n\nYour analysis should identify counties that should be priorities for healthcare investment and policy intervention.\n\n### Required Analysis Steps\n\nComplete the following analysis, documenting each step with code and brief explanations:\n\n#### Step 1: Data Collection (5 points)\n\nLoad the required spatial data:\n- Pennsylvania county boundaries\n- Pennsylvania hospitals (from lecture data)\n- Pennsylvania census tracts\n\n**Your Task:**\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidycensus)\nlibrary(tidyverse)\nlibrary(tigris)\nlibrary(scales)\nlibrary(sf)\nlibrary(knitr)\nlibrary(patchwork)\n\nlibrary(patchwork)\nlibrary(here)\n\npa_counties <- st_read(\"./data/Pennsylvania_County_Boundaries.shp\", quiet = TRUE)\nhospitals <- st_read(\"./data/hospitals.geojson\", quiet = TRUE)\ncensus_tracts <- tracts(state = \"PA\", cb = TRUE, progress_bar = FALSE)\n\n# Checking the CRS:\ncat(\"pa_counties CRS:\", st_crs(pa_counties)$input, \" EPSG:\", st_crs(pa_counties)$epsg, \"\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\npa_counties CRS: WGS 84 / Pseudo-Mercator  EPSG: 3857 \n```\n\n\n:::\n\n```{.r .cell-code}\ncat(\"hospitals CRS:\", st_crs(hospitals)$input, \" EPSG:\", st_crs(hospitals)$epsg, \"\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nhospitals CRS: WGS 84  EPSG: 4326 \n```\n\n\n:::\n\n```{.r .cell-code}\ncat(\"census_tracts CRS:\", st_crs(census_tracts)$input, \" EPSG:\", st_crs(hospitals)$epsg, \"\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\ncensus_tracts CRS: NAD83  EPSG: 4326 \n```\n\n\n:::\n:::\n\n\n**Questions to answer:**\n\n- How many hospitals are in your dataset?\n  - 223 Hospitals\n- How many census tracts?\n  - 3445 Census Tracts\n- What coordinate reference system is each dataset in?\n  - As calculated in the above code block:\n    - pa_counties CRS: WGS 84 / Pseudo-Mercator EPSG: 3857 \n    - hospitals CRS: WGS 84 EPSG: 4326 \n    - census_tracts CRS: NAD83 EPSG: 4326 \n\n---\n\n#### Step 2: Get Demographic Data \n\nUse `tidycensus` to download tract-level demographic data for Pennsylvania.\n\n**Required variables:**\n- Total population\n- Median household income\n- Population 65 years and over (you may need to sum multiple age categories)\n\n**Your Task:**\n\n::: {.cell}\n\n```{.r .cell-code}\n# Determining what variables are needed for >= 65 years:\nacs_vars_2022 <- load_variables(2022, \"acs5\", cache = TRUE) \n\nacs_vars_2022_65_above <- acs_vars_2022 %>% \n  filter(concept == \"Sex by Age\") %>%\n  filter(str_detect(label, \"([6-9][5-9]|[7-9][0-9]|85).*years\"))\n\nacs_age_pop <- acs_vars_2022_65_above$name\n\n# In the wide format, we need names assigned to the 12 population vars based on age and sex\nnames(acs_age_pop) <- acs_vars_2022_65_above$label %>%\n  str_to_lower() %>%\n  str_replace_all(\"estimate!!(total!!)?\", \"\") %>%  # remove 'estimate!!' and 'total!!' if present\n  str_replace_all(\"!!|and| \", \"_\") %>%           # replace !!, 'and', and spaces with _\n  str_replace_all(\"years\", \"\") %>%               # remove 'years'\n  str_replace_all(\"[^a-z0-9_]\", \"\")             # remove any remaining punctuation\n\ntract_demographics <- get_acs(\n  geography = \"tract\",\n  variables = c(\n    total_pop = \"B01003_001\",\n    median_income = \"B19013_001\",\n    acs_age_pop\n  ),\n  state = \"PA\",\n  year = 2022,\n  output = \"wide\"\n)\n\nfinal_tract_demographics <- tract_demographics %>%\n  mutate(\n    pop_65_plus = rowSums(\n      select(., starts_with(\"total_male_\") | starts_with(\"total_female_\")) %>%\n        select(., ends_with(\"E\")),\n      na.rm = TRUE\n    )\n  ) %>%\n  select(GEOID, NAME, total_popE, median_incomeE, pop_65_plus, \n         total_popM, median_incomeM)\n\n\n# Join to tract boundaries\ntracts_with_data <- census_tracts %>%\n  left_join(final_tract_demographics, by = \"GEOID\")\n\nsum(is.na(tracts_with_data$median_incomeE))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 62\n```\n\n\n:::\n\n```{.r .cell-code}\nmedian(tracts_with_data$median_incomeE, na.rm = TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 70188\n```\n\n\n:::\n:::\n\n\n**Questions to answer:**\n\n- What year of ACS data are you using?\n  - 2022 ACS Data\n- How many tracts have missing income data?\n  - 62 tracts\n- What is the median income across all PA census tracts?\n  - $70188\n  \n---\n\n#### Step 3: Define Vulnerable Populations \n\nIdentify census tracts with vulnerable populations based on TWO criteria:\n1. Low median household income (choose an appropriate threshold)\n2. Significant elderly population (choose an appropriate threshold)\n\n**Your Task:**\n\n::: {.cell}\n\n```{.r .cell-code}\ntracts_with_data <- tracts_with_data %>%\n  mutate(pct_65_plus = (pop_65_plus / total_popE) * 100)\n\nincome_threshold <- quantile(\n  tracts_with_data$median_incomeE, \n  0.25, \n  na.rm = TRUE\n)\nelderly_threshold <- quantile(\n  tracts_with_data$pct_65_plus,\n  0.75,\n  na.rm = TRUE\n)\n\ntracts_with_data <- tracts_with_data %>%\n  mutate(\n    low_income = median_incomeE <= income_threshold,\n    high_elderly = pct_65_plus >= elderly_threshold,\n    vulnerable = low_income & high_elderly\n  )\n\nn_vulnerable_tracts <- sum(tracts_with_data$vulnerable, na.rm = TRUE)\npct_vulnerable_tracts <- n_vulnerable_tracts / nrow(tracts_with_data) * 100\n```\n:::\n\n\n**Questions to answer:**\n\n- What income threshold did you choose and why?\n  - I went with a quantile approach, because I wanted to see what median incomes are especially low in the context of Pennsylvania. The threshold is the bottom 25% of median incomes in the state. Based on 2022 data, that is $55924. This approach can also stand the test of time, because it will update as we get new data.\n- What elderly population threshold did you choose and why?\n  - I went with a similar approach as above, but this time picking the counties that are in the top 25% of tracts with population above 65 This is a dynamic cutoff, but with 2022 data it is 23.1% of the population being >=65.\n- How many tracts meet your vulnerability criteria?\n  - 165 tracts meet this vulnerability criteria (having income in the lowest 25% of PA census tracts AND having an elderly population in the top 25%)\n- What percentage of PA census tracts are considered vulnerable by your definition?\n  - ~4.79% of PA census tracts meet this criteria. (165 vulnerable / 3445 total)\n\n---\n\n#### Step 4: Calculate Distance to Hospitals \n\nFor each vulnerable tract, calculate the distance to the nearest hospital.\n\n**Your Task:**\n\n::: {.cell}\n\n```{.r .cell-code}\n# Transform to appropriate projected CRS\npa_projection <- 3365 # NAD83 / Pennsylvania South\n\npa_counties <- st_transform(pa_counties, crs = pa_projection)\ntracts_with_data <- st_transform(tracts_with_data, crs = pa_projection)\nhospitals <- st_transform(hospitals, crs = pa_projection)\n\ncat(\"pa_counties CRS:\", st_crs(pa_counties)$input, \"\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\npa_counties CRS: EPSG:3365 \n```\n\n\n:::\n\n```{.r .cell-code}\ncat(\"hospitals CRS:\", st_crs(hospitals)$input, \"\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nhospitals CRS: EPSG:3365 \n```\n\n\n:::\n\n```{.r .cell-code}\ncat(\"census_tracts CRS:\", st_crs(tracts_with_data)$input, \"\\n\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\ncensus_tracts CRS: EPSG:3365 \n```\n\n\n:::\n\n```{.r .cell-code}\n# Calculate distance from each tract centroid to nearest hospital\n\ntract_centroids <- st_centroid(tracts_with_data)\ntracts_with_data <- tracts_with_data %>%\n  mutate(\n    dist_to_hospital = st_distance(tract_centroids, hospitals)  %>% \n    apply(1, min) %>% \n    as.numeric() / 1609.34\n  )\n\ntracts_with_data %>%\n  st_drop_geometry() %>%\n  filter(vulnerable == TRUE) %>%\n  summarise(\n    avg_distance = mean(dist_to_hospital, na.rm = TRUE),\n    max_distance = max(dist_to_hospital, na.rm = TRUE),\n    more_than_15_miles = sum(dist_to_hospital > 15, na.rm = TRUE),\n  )\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  avg_distance max_distance more_than_15_miles\n1     15.57102     62.85519                 56\n```\n\n\n:::\n:::\n\n\n**Requirements:**\n\n- Use an appropriate projected coordinate system for Pennsylvania\n- Calculate distances in miles\n  - Done with \"as.numeric() / 1609.34\".\n- Explain why you chose your projection\n  - I used NAD83 / Pennsylvania South (EPSG:3365) for this statewide analysis. Pennsylvania spans two State Plane zones designed to reduce distortion across the state's large east-west extent. Rather than conducting separate analyses for each zone, I applied the South zone projection statewide to balance efficiency with measurement accuracy. Some of the northern counties will experience distortion as a result.\n\n**Questions to answer:**\n\n- What is the average distance to the nearest hospital for vulnerable tracts?\n  - ~15.57 miles\n- What is the maximum distance?\n  - ~62.86 miles\n- How many vulnerable tracts are more than 15 miles from the nearest hospital?\n  - 56 tracts\n\n---\n\n#### Step 5: Identify Underserved Areas \n\nDefine \"underserved\" as vulnerable tracts that are more than 15 miles from the nearest hospital.\n\n**Your Task:**\n\n::: {.cell}\n\n```{.r .cell-code}\ntracts_with_data <- tracts_with_data %>%\n  mutate(\n    underserved = vulnerable & dist_to_hospital > 15\n  )\n\ntracts_with_data %>%\n  st_drop_geometry() %>%\n  summarise(\n    n_underserved = sum(underserved, na.rm = TRUE),\n    n_vulnerable = sum(vulnerable, na.rm = TRUE),\n    pct_vulnerable_underserved = sum(underserved, na.rm = TRUE) / sum(vulnerable, na.rm = TRUE) * 100\n  )\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  n_underserved n_vulnerable pct_vulnerable_underserved\n1            56          165                   33.93939\n```\n\n\n:::\n\n```{.r .cell-code}\n# Doing some data explortation to see what distinct counties contain the underserved counties\n# tracts_with_data %>%\n#   st_drop_geometry() %>%\n#   filter(underserved == TRUE) %>%\n#   distinct(NAMELSADCO) %>%\n#   arrange(NAMELSADCO)\n```\n:::\n\n\n**Questions to answer:**\n\n- How many tracts are underserved?\n  - 56 tracts\n- What percentage of vulnerable tracts are underserved?\n  - 33.94%\n- Does this surprise you? Why or why not?\n  - Not entirely. I explored the counties that contain these underserved tracts and most of them are in rural Pennsylvania, where it's reasonable to expect an aging population and lower income levels. Rural counties are also where you can expect large distances to hospitals.\n\n---\n\n#### Step 6: Aggregate to County Level\n\nUse spatial joins and aggregation to calculate county-level statistics about vulnerable populations and hospital access.\n\n**Your Task:**\n\n::: {.cell}\n\n```{.r .cell-code}\n# Spatial join tracts to counties\ntracts_by_county <- tracts_with_data %>% \n  st_join(pa_counties %>% select(COUNTY_NAM))\n\n# tracts_by_county is larger than tracts_with_data, which seems to be because tracts are appearing for multiple counties. For the sake of this analysis, I will do the join again but tie a census tract to the county it's mostly in (largest county).\n\ntracts_by_county <- tracts_with_data %>% \n  st_join(pa_counties %>% select(COUNTY_NAM), largest = TRUE)\n\n# Aggregate statistics by county\ncounty_stats <- tracts_by_county %>%\n  st_drop_geometry() %>%\n  group_by(COUNTY_NAM) %>%\n  summarise(\n    total_tracts = n(), # including to understand the scale of the county\n    vulnerable_tracts = sum(vulnerable, na.rm = TRUE),\n    underserved_tracts = sum(underserved, na.rm = TRUE),\n    pct_vulnerable_underserved = round(\n      ifelse(vulnerable_tracts > 0, \n             (underserved_tracts / vulnerable_tracts) * 100, 0), 1),\n    avg_dist_to_hospital = round(mean(dist_to_hospital, na.rm = TRUE), 2),\n    total_pop_in_vulnerable = sum(total_popE[vulnerable == TRUE], na.rm = TRUE),\n  )  %>%\n  arrange(desc(pct_vulnerable_underserved))\n\ncounty_stats %>%\n  kable(col.names = c(\"County\", \"Total Tracts\", \"Vulnerable Tracts\", \n                      \"Underserved Tracts\", \"% Vulnerable\", \"Avg Distance (mi)\", \"Total Pop in Vulnerable Tracts\"))\n```\n\n::: {.cell-output-display}\n\n\n|County         | Total Tracts| Vulnerable Tracts| Underserved Tracts| % Vulnerable| Avg Distance (mi)| Total Pop in Vulnerable Tracts|\n|:--------------|------------:|-----------------:|------------------:|------------:|-----------------:|------------------------------:|\n|ARMSTRONG      |           19|                 1|                  1|        100.0|             26.91|                           2106|\n|BRADFORD       |           15|                 1|                  1|        100.0|             33.40|                           5466|\n|CLARION        |           13|                 2|                  2|        100.0|             28.45|                           3586|\n|CLINTON        |           10|                 1|                  1|        100.0|             31.59|                           3176|\n|ELK            |            9|                 1|                  1|        100.0|             26.96|                           1557|\n|FOREST         |            2|                 1|                  1|        100.0|             60.38|                           2701|\n|HUNTINGDON     |           13|                 1|                  1|        100.0|             32.19|                           2558|\n|INDIANA        |           24|                 2|                  2|        100.0|             19.06|                           5703|\n|JUNIATA        |            6|                 1|                  1|        100.0|             49.24|                           1782|\n|LANCASTER      |          116|                 1|                  1|        100.0|             17.15|                           4387|\n|LEBANON        |           33|                 1|                  1|        100.0|             13.89|                           3107|\n|LYCOMING       |           32|                 1|                  1|        100.0|             14.63|                           2052|\n|MONROE         |           51|                 1|                  1|        100.0|             32.97|                           1299|\n|NORTHUMBERLAND |           25|                 4|                  4|        100.0|             32.30|                           9087|\n|SULLIVAN       |            4|                 1|                  1|        100.0|             74.39|                            918|\n|SUSQUEHANNA    |           12|                 1|                  1|        100.0|             25.63|                           1612|\n|VENANGO        |           17|                 1|                  1|        100.0|             22.35|                           4785|\n|WAYNE          |           17|                 1|                  1|        100.0|             30.51|                           2445|\n|CLEARFIELD     |           20|                 4|                  3|         75.0|             43.07|                          13056|\n|SOMERSET       |           24|                 4|                  3|         75.0|             20.99|                          11454|\n|MCKEAN         |           12|                 3|                  2|         66.7|             24.22|                           7832|\n|POTTER         |            7|                 3|                  2|         66.7|             36.16|                           9062|\n|WARREN         |           13|                 3|                  2|         66.7|             21.05|                           8041|\n|BEDFORD        |           12|                 2|                  1|         50.0|             31.23|                           7578|\n|CRAWFORD       |           23|                 4|                  2|         50.0|             24.01|                           9072|\n|DAUPHIN        |           67|                 2|                  1|         50.0|             15.09|                           8410|\n|JEFFERSON      |           13|                 2|                  1|         50.0|             15.63|                           4566|\n|LAWRENCE       |           28|                 2|                  1|         50.0|             16.65|                           4200|\n|FAYETTE        |           36|                 7|                  3|         42.9|             18.45|                          25230|\n|BLAIR          |           38|                 3|                  1|         33.3|              9.24|                           7602|\n|CAMBRIA        |           42|                 6|                  2|         33.3|             17.08|                          13551|\n|NORTHAMPTON    |           74|                 3|                  1|         33.3|             13.58|                          10073|\n|LUZERNE        |          101|                 7|                  2|         28.6|             14.26|                          21062|\n|WESTMORELAND   |          113|                11|                  3|         27.3|             14.57|                          25093|\n|ERIE           |           73|                 4|                  1|         25.0|             17.28|                          12216|\n|BEAVER         |           53|                 5|                  1|         20.0|             15.16|                           9763|\n|ALLEGHENY      |          394|                22|                  1|          4.5|              7.45|                          51790|\n|ADAMS          |           27|                 0|                  0|          0.0|             20.58|                              0|\n|BERKS          |          107|                 0|                  0|          0.0|             13.78|                              0|\n|BUCKS          |          147|                 0|                  0|          0.0|             12.51|                              0|\n|BUTLER         |           47|                 0|                  0|          0.0|             19.28|                              0|\n|CAMERON        |            2|                 0|                  0|          0.0|             62.56|                              0|\n|CARBON         |           17|                 0|                  0|          0.0|             19.58|                              0|\n|CENTRE         |           41|                 0|                  0|          0.0|             18.69|                              0|\n|CHESTER        |          124|                 0|                  0|          0.0|             22.04|                              0|\n|COLUMBIA       |           16|                 0|                  0|          0.0|             12.66|                              0|\n|CUMBERLAND     |           55|                 1|                  0|          0.0|             17.00|                           2438|\n|DELAWARE       |          152|                 1|                  0|          0.0|              7.61|                           2972|\n|FRANKLIN       |           33|                 2|                  0|          0.0|             16.13|                           7949|\n|FULTON         |            3|                 0|                  0|          0.0|             23.65|                              0|\n|GREENE         |           10|                 0|                  0|          0.0|             24.44|                              0|\n|LACKAWANNA     |           60|                 5|                  0|          0.0|              8.85|                          13322|\n|LEHIGH         |           81|                 1|                  0|          0.0|              9.77|                           3974|\n|MERCER         |           35|                 5|                  0|          0.0|             12.60|                          16686|\n|MIFFLIN        |           13|                 0|                  0|          0.0|             18.31|                              0|\n|MONTGOMERY     |          219|                 1|                  0|          0.0|              8.26|                           2069|\n|MONTOUR        |            4|                 0|                  0|          0.0|             10.31|                              0|\n|PERRY          |           10|                 0|                  0|          0.0|             43.52|                              0|\n|PHILADELPHIA   |          408|                16|                  0|          0.0|              3.65|                          61873|\n|PIKE           |           25|                 0|                  0|          0.0|             63.07|                              0|\n|SCHUYLKILL     |           42|                 3|                  0|          0.0|             21.05|                          11194|\n|SNYDER         |            8|                 0|                  0|          0.0|             47.46|                              0|\n|TIOGA          |           10|                 1|                  0|          0.0|             35.01|                           3459|\n|UNION          |           11|                 2|                  0|          0.0|             22.49|                           9762|\n|WASHINGTON     |           62|                 3|                  0|          0.0|             14.51|                           5008|\n|WYOMING        |            7|                 0|                  0|          0.0|             42.57|                              0|\n|YORK           |          108|                 4|                  0|          0.0|             16.18|                          11199|\n\n\n:::\n\n```{.r .cell-code}\ncounty_stats %>%\n  head(18) %>%\n  select(COUNTY_NAM, vulnerable_tracts, underserved_tracts, pct_vulnerable_underserved)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 18 × 4\n   COUNTY_NAM     vulnerable_tracts underserved_tracts pct_vulnerable_underser…¹\n   <chr>                      <int>              <int>                     <dbl>\n 1 ARMSTRONG                      1                  1                       100\n 2 BRADFORD                       1                  1                       100\n 3 CLARION                        2                  2                       100\n 4 CLINTON                        1                  1                       100\n 5 ELK                            1                  1                       100\n 6 FOREST                         1                  1                       100\n 7 HUNTINGDON                     1                  1                       100\n 8 INDIANA                        2                  2                       100\n 9 JUNIATA                        1                  1                       100\n10 LANCASTER                      1                  1                       100\n11 LEBANON                        1                  1                       100\n12 LYCOMING                       1                  1                       100\n13 MONROE                         1                  1                       100\n14 NORTHUMBERLAND                 4                  4                       100\n15 SULLIVAN                       1                  1                       100\n16 SUSQUEHANNA                    1                  1                       100\n17 VENANGO                        1                  1                       100\n18 WAYNE                          1                  1                       100\n# ℹ abbreviated name: ¹​pct_vulnerable_underserved\n```\n\n\n:::\n\n```{.r .cell-code}\ntracts_by_county %>%\n  st_drop_geometry() %>%\n  filter(underserved == TRUE) %>%\n  group_by(COUNTY_NAM) %>%\n  summarise(\n    underserved_tracts = n(),\n    vulnerable_pop_far_from_hospitals = sum(total_popE, na.rm = TRUE)\n  ) %>%\n  arrange(desc(vulnerable_pop_far_from_hospitals)) %>%\n  head(5)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 5 × 3\n  COUNTY_NAM     underserved_tracts vulnerable_pop_far_from_hospitals\n  <chr>                       <int>                             <dbl>\n1 FAYETTE                         3                             13304\n2 NORTHUMBERLAND                  4                              9087\n3 WESTMORELAND                    3                              8574\n4 CLEARFIELD                      3                              7771\n5 SOMERSET                        3                              7209\n```\n\n\n:::\n:::\n\n\n**Required county-level statistics:**\n\n- Number of vulnerable tracts\n- Number of underserved tracts  \n- Percentage of vulnerable tracts that are underserved\n- Average distance to nearest hospital for vulnerable tracts\n- Total vulnerable population\n\n**Questions to answer:**\n\n- Which 5 counties have the highest percentage of underserved vulnerable tracts?\n  - Based on my criteria, 18 counties have the same percentage of vulnerable tracts that are underserved. Those 18 counties are printed above.\n- Which counties have the most vulnerable people living far from hospitals?\n  - Fayette, Northumberland, Westmoreland, and Clearfield, and Somerset.\n- Are there any patterns in where underserved counties are located?\n  - Most of the counties (and all of the counties with the most vulnerable people) are large rural counties.\n\n---\n\n#### Step 7: Create Summary Table \n\nCreate a professional table showing the top 10 priority counties for healthcare investment.\n\n**Your Task:**\n\n::: {.cell}\n\n```{.r .cell-code}\ntracts_by_county %>%\n  st_drop_geometry() %>%\n  filter(underserved == TRUE) %>%\n  group_by(COUNTY_NAM) %>%\n  summarise(\n    underserved_tracts = n(),\n    vulnerable_pop_far_from_hospitals = sum(total_popE, na.rm = TRUE)\n  ) %>%\n  arrange(desc(vulnerable_pop_far_from_hospitals)) %>%\n  head(10) %>%\n  kable(\n    col.names = c(\"County\", \"Underserved Tracts\", \"Total Population\"),\n    align = c(\"l\", \"r\", \"r\"),\n    format.args = list(big.mark = \",\"),\n    caption = \"Top 10 Priority Counties for Healthcare Investment - Ranked by total population in underserved vulnerable tracts (>15 miles from nearest hospital)\"\n  )\n```\n\n::: {.cell-output-display}\n\n\nTable: Top 10 Priority Counties for Healthcare Investment - Ranked by total population in underserved vulnerable tracts (>15 miles from nearest hospital)\n\n|County         | Underserved Tracts| Total Population|\n|:--------------|------------------:|----------------:|\n|FAYETTE        |                  3|           13,304|\n|NORTHUMBERLAND |                  4|            9,087|\n|WESTMORELAND   |                  3|            8,574|\n|CLEARFIELD     |                  3|            7,771|\n|SOMERSET       |                  3|            7,209|\n|LUZERNE        |                  2|            5,728|\n|INDIANA        |                  2|            5,703|\n|BRADFORD       |                  1|            5,466|\n|MCKEAN         |                  2|            5,452|\n|WARREN         |                  2|            5,103|\n\n\n:::\n:::\n\n*Note: Vulnerable tracts are defined as those in the bottom 25% for median household income and top 25% for percentage of population 65+. Underserved tracts are vulnerable tracts located more than 15 miles from the nearest hospital.*\n\n**Requirements:**\n- Use `knitr::kable()` or similar for formatting\n- Include descriptive column names\n- Format numbers appropriately (commas for population, percentages, etc.)\n- Add an informative caption\n- Sort by priority (you decide the metric)\n\n---\n\n## Part 2: Comprehensive Visualization \n\nUsing the skills from Week 3 (Data Visualization), create publication-quality maps and charts.\n\n### Map 1: County-Level Choropleth \n\nCreate a choropleth map showing healthcare access challenges at the county level.\n\n**Your Task:**\n\n::: {.cell}\n\n```{.r .cell-code}\ncounty_map_data <- pa_counties %>%\n  left_join(county_stats, by = \"COUNTY_NAM\")\n\nggplot() +\n  geom_sf(data = county_map_data, \n          aes(fill = pct_vulnerable_underserved),\n          color = \"white\", \n          size = 0.3) +\n  geom_sf(data = hospitals, \n          color = \"navy\", \n          size = 1.5, \n          alpha = 0.75,\n          shape = 3) +\n  scale_fill_gradient(\n    low = \"#fee6ce\",\n    high = \"#a63603\",\n    na.value = \"grey90\",\n    name = \"% of Vulnerable Census Tracts\\nthat are Underserved \",\n    labels = function(x) paste0(x, \"%\")\n  ) +\n  labs(\n    title = \"Healthcare Access Challenges in Pennsylvania\",\n    subtitle = \"Percentage of vulnerable tracts in a county that are underserved (>15 miles from a hospital)\",\n    caption = \"Vulnerable tracts: bottom 25% in median income & top 25% in population 65+, relative to the rest of PA\\nBlue crosses indicate hospital locations\"\n  ) +\n  theme_void() +\n  theme(\n    plot.title = element_text(face = \"bold\", hjust = 0.5),\n    plot.subtitle = element_text(size = 10, hjust = 0.5),\n    plot.caption = element_text(size = 8, hjust = 0.5),\n    legend.position = \"left\"\n  )\n```\n\n::: {.cell-output-display}\n![](Kakumanu_Sujan_Assignment2_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n\n**Requirements:**\n- Fill counties by percentage of vulnerable tracts that are underserved\n- Include hospital locations as points\n- Use an appropriate color scheme\n- Include clear title, subtitle, and caption\n- Use `theme_void()` or similar clean theme\n- Add a legend with formatted labels\n\n---\n\n### Map 2: Detailed Vulnerability Map \n\nCreate a map highlighting underserved vulnerable tracts.\n\n**Your Task:**\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot() +\n  geom_sf(data = tracts_with_data, \n          fill = \"gray85\", \n          color = \"white\", \n          size = 0.1) +\n  geom_sf(data = tracts_with_data %>% filter(underserved == TRUE), \n          fill = \"maroon\",\n          color = \"white\", \n          size = 0.1) +\n  geom_sf(data = pa_counties, \n          fill = NA, \n          color = \"black\", \n          size = 0.5) +\n  # Hospital locations\n  geom_sf(data = hospitals, \n          color = \"navy\", \n          size = 1.5, \n          alpha = 0.75,\n          shape = 3) +\n  labs(\n    title = \"Underserved Vulnerable Census Tracts in Pennsylvania\",\n    subtitle = \"Red areas show vulnerable tracts where the center is more than 15 miles from the nearest hospital\",\n    caption = \"Vulnerable tracts: bottom 25% in median income & top 25% in population 65+, relative to the rest of PA\\nBlue crosses indicate hospital locations\"\n  ) +\n  theme_void() +\n  theme(\n    plot.title = element_text(face = \"bold\", size = 14, hjust = 0.5),\n    plot.subtitle = element_text(size = 10, hjust = 0.5, margin = margin(b = 10)),\n    plot.caption = element_text(size = 8, hjust = 0, margin = margin(t = 10)),\n    plot.margin = margin(20, 20, 20, 20)\n  )\n```\n\n::: {.cell-output-display}\n![](Kakumanu_Sujan_Assignment2_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\n\n**Requirements:**\n- Show underserved vulnerable tracts in a contrasting color\n- Include county boundaries for context\n- Show hospital locations\n- Use appropriate visual hierarchy (what should stand out?)\n- Include informative title and subtitle\n\n---\n\n### Chart: Distribution Analysis\n\nCreate a visualization showing the distribution of distances to hospitals for vulnerable populations.\n\n**Your Task:**\n\n::: {.cell}\n\n```{.r .cell-code}\n# Create distribution visualization\ntracts_with_data %>%\n  st_drop_geometry() %>%\n  filter(vulnerable == TRUE) %>%\n  ggplot(aes(x = dist_to_hospital)) +\n  geom_histogram(bins = 30, fill = \"navy\", color = \"white\") +\n  geom_vline(xintercept = 15, linetype = \"dashed\", color = \"maroon\", size = 1) +\n  labs(\n    title = \"Distance to Nearest Hospital for Vulnerable Tracts\",\n    x = \"Distance (miles)\",\n    y = \"Number of Vulnerable Tracts\",\n    caption = \"Vulnerable tracts: bottom 25% in median income & top 25% in population 65+, relative to the rest of PA\\nDashed line shows 15-mile threshold used to define underserved.\\nNote how there is a clustering of tracts with relatively close hospital access (<15 miles) and a very long tail beyond the 15 mile cutoff.\"\n  ) +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](Kakumanu_Sujan_Assignment2_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n\n**Suggested chart types:**\n- Histogram or density plot of distances\n- Box plot comparing distances across regions\n- Bar chart of underserved tracts by county\n- Scatter plot of distance vs. vulnerable population size\n\n**Requirements:**\n- Clear axes labels with units\n- Appropriate title\n- Professional formatting\n- Brief interpretation (1-2 sentences as a caption or in text)\n\n---\n\n## Part 3: Bring Your Own Data Analysis \n\nChoose your own additional spatial dataset and conduct a supplementary analysis.\n\n### Challenge\n\n#### Infrastructure & Services\n- **Data:** Polling Places, SEPTA stops, Census tracts (elderly population, disability rates)\n- **Question:** \"Are polling places accessible for elderly and disabled voters?\"\n- **Operations:** Buffer polling places and transit stops, identify vulnerable populations, find areas lacking access\n- **Policy relevance:** Voting rights, election infrastructure, ADA compliance\n\n---\n\n### Data Sources\n\n**OpenDataPhilly:** https://opendataphilly.org/datasets/\n- Most datasets available as GeoJSON, Shapefile, or CSV with coordinates\n- Always check the Metadata for a data dictionary of the fields.\n\n**Additional Sources:**\n- **Pennsylvania Open Data:** https://data.pa.gov/\n- **Census Bureau (via tidycensus):** Demographics, economic indicators, commute patterns\n- **TIGER/Line (via tigris):** Geographic boundaries\n\n### Your Analysis\n\n**Your Task:**\n\n1. **Find and load additional data**\n   - Document your data source\n   - Check and standardize the CRS\n   - Provide basic summary statistics\n\n\n::: {.cell}\n\n```{.r .cell-code}\npolling_places <- st_read(\"./data/polling_places.geojson\", quiet = TRUE)\nst_crs(polling_places)$input\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"WGS 84\"\n```\n\n\n:::\n\n```{.r .cell-code}\npolling_places <- st_transform(polling_places, crs = pa_projection)\nst_crs(polling_places)$input\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"EPSG:3365\"\n```\n\n\n:::\n\n```{.r .cell-code}\nphilly_tracts <- tracts_by_county %>%\n  filter(COUNTY_NAM == \"PHILADELPHIA\")\n\npolling_places %>%\n  st_drop_geometry() %>%\n  count(accessibility_code) %>%\n  mutate(\n    percentage = round(n / sum(n) * 100, 1),\n    accessibility_type = case_when(\n      accessibility_code == \"A\" ~ \"Alternate Entrance\",\n      accessibility_code == \"B\" ~ \"Substantially Accessible\",\n      accessibility_code == \"F\" ~ \"Fully Accessible\",\n      accessibility_code == \"M\" ~ \"Accessibility Modified\",\n      accessibility_code == \"N\" ~ \"Not Accessible\",\n      accessibility_code == \"R\" ~ \"Accessible With Ramp\",\n      TRUE ~ \"Unknown\"\n    )\n  ) %>%\n  arrange(desc(n)) %>%\n  select(accessibility_code, accessibility_type, n, percentage) %>%\n  bind_rows(\n    summarise(., \n              accessibility_code = \"TOTAL\",\n              accessibility_type = \"\",\n              n = sum(n),\n              percentage = sum(percentage))\n  ) %>%\n  kable(\n    col.names = c(\"Code\", \"Accessibility Type\", \"Count\", \"%\"),\n    align = c(\"l\", \"l\", \"r\", \"r\"),\n    caption = \"Polling Locations in Philadelphia by Accesibility Type\"\n  )\n```\n\n::: {.cell-output-display}\n\n\nTable: Polling Locations in Philadelphia by Accesibility Type\n\n|Code  |Accessibility Type       | Count|     %|\n|:-----|:------------------------|-----:|-----:|\n|M     |Accessibility Modified   |   740|  43.5|\n|F     |Fully Accessible         |   674|  39.6|\n|A     |Alternate Entrance       |   166|   9.7|\n|R     |Accessible With Ramp     |    72|   4.2|\n|B     |Substantially Accessible |    51|   3.0|\n|TOTAL |                         |  1703| 100.0|\n\n\n:::\n:::\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsepta_bus_stops <- st_read(\"./data/2022_SEPTA_Bus_Stops.geojson\", quiet = TRUE)\n\nst_crs(septa_bus_stops)$input\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"WGS 84\"\n```\n\n\n:::\n\n```{.r .cell-code}\nsepta_bus_stops <- st_transform(septa_bus_stops, crs = pa_projection)\nst_crs(septa_bus_stops)$input\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"EPSG:3365\"\n```\n\n\n:::\n\n```{.r .cell-code}\nphilly_bus_stops <- septa_bus_stops %>%\n  st_filter(philly_tracts)\n```\n:::\n\n\n**Questions to answer:**\n\n- What dataset did you choose and why?\n  - I chose polling data because I found it interesting that they're classified by fairly detailed accessibility codes. Above is a table of the polling locations in Philadelphia by accessibility type. I also chose data points describing SEPT bus stops. I want to see if there are any polling locations not near bus stops.\n- What is the data source and date?\n  - Polling Places: December 8, 2014. Found [here](https://opendataphilly.org/datasets/polling-places/)\n  - SEPTA Bus Stops: 2022. Found [here](https://data-septa.opendata.arcgis.com/search?q=bus&tags=bus)\n- How many features does it contain?\n  - 1703 Polling Places (in Philadelphia)\n  - 18066 Bus Stops (in SEPTA's service area, not necessarily just in Philadelphia)\n    - After filtering to bus stops only in the Philly census tracts, there are 10654 bus stops.\n- What CRS is it in? Did you need to transform it?\n  - Both were in WGS 84 and had to be transformed to EPSG:3365.\n\n---\n\n2. **Pose a research question**\n\nWhat Philadelphia polling locations are further than a 5, 10, and 15 min walk from a bus stop?\n\nNote: Using an average walk speed of ~2.5mph, this would be distances of 0.2, 0.4, and 0.6 miles respectively.\n\n---\n\n3. **Conduct spatial analysis**\n\nUse at least TWO spatial operations to answer your research question.\n\n**Required operations (choose 2+):**\n- Buffers\n- Spatial joins\n- Spatial filtering with predicates\n- Distance calculations\n- Intersections or unions\n- Point-in-polygon aggregation\n\n**Your Task:**\n\n::: {.cell}\n\n```{.r .cell-code}\n# Your spatial analysis\n\n# State plane is in feet, so I'm converting miles to feet to create the buffers\nbus_buffer_5min <- st_buffer(philly_bus_stops, dist = 0.20 * 5280)\nbus_buffer_10min <- st_buffer(philly_bus_stops, dist = 0.40 * 5280)\nbus_buffer_15min <- st_buffer(philly_bus_stops, dist = 0.60 * 5280)\n\n# Doing this to consolidate buffers for easier analysis\nbus_zone_5min <- st_union(bus_buffer_5min)\nbus_zone_10min <- st_union(bus_buffer_10min)\nbus_zone_15min <- st_union(bus_buffer_15min)\n\npolling_no_transit_5min <- polling_places %>%\n  st_difference(bus_zone_5min)\n\npolling_no_transit_10min <- polling_places %>%\n  st_difference(bus_zone_10min)\n\npolling_no_transit_15min <- polling_places %>%\n  st_difference(bus_zone_15min)\n\n# Here, I'm finding the distance to the nearest bus stop, and setting some boolean variables for my time categories.\npolling_with_distance <- polling_places %>%\n  mutate(\n    dist_to_bus = st_distance(., philly_bus_stops) %>% \n      apply(1, min) %>% \n      as.numeric() / 5280,\n    beyond_5min = dist_to_bus > 0.20,\n    beyond_10min = dist_to_bus > 0.40,\n    beyond_15min = dist_to_bus > 0.60\n  )\n\npolling_with_distance %>%\n  st_drop_geometry() %>%\n  summarise(\n    total_polling = n(),\n    beyond_5min = sum(beyond_5min, na.rm = TRUE),\n    beyond_10min = sum(beyond_10min, na.rm = TRUE),\n    beyond_15min = sum(beyond_15min, na.rm = TRUE),\n    pct_beyond_5min = round((beyond_5min / total_polling) * 100, 1),\n    pct_beyond_10min = round((beyond_10min / total_polling) * 100, 1),\n    pct_beyond_15min = round((beyond_15min / total_polling) * 100, 1)\n  )\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  total_polling beyond_5min beyond_10min beyond_15min pct_beyond_5min\n1          1703         106            3            0             6.2\n  pct_beyond_10min pct_beyond_15min\n1              0.2                0\n```\n\n\n:::\n\n```{.r .cell-code}\nmap_5min <- ggplot() +\n  geom_sf(data = philly_tracts, fill = \"gray95\", color = \"white\", size = 0.2) +\n  geom_sf(data = polling_with_distance %>% filter(beyond_5min), \n          color = \"gold\", size = 1.5, alpha = 0.7) +\n  geom_sf(data = polling_with_distance %>% filter(!beyond_5min), \n          color = \"gray70\", size = 0.5, alpha = 0.3) +\n  theme_void() +\n  labs(title = \"> 5 min walk\") +\n  theme(plot.title = element_text(hjust = 0.5, face = \"bold\"))\n\n# Map 2: Beyond 10 minutes\nmap_10min <- ggplot() +\n  geom_sf(data = philly_tracts, fill = \"gray95\", color = \"white\", size = 0.2) +\n  geom_sf(data = polling_with_distance %>% filter(beyond_10min), \n          color = \"orangered\", size = 1.5, alpha = 0.7) +\n  geom_sf(data = polling_with_distance %>% filter(!beyond_10min), \n          color = \"gray70\", size = 0.5, alpha = 0.3) +\n  theme_void() +\n  labs(title = \"> 10 min walk\") +\n  theme(plot.title = element_text(hjust = 0.5, face = \"bold\"))\n\n# Map 3: Beyond 15 minutes\nmap_15min <- ggplot() +\n  geom_sf(data = philly_tracts, fill = \"gray95\", color = \"white\", size = 0.2) +\n  geom_sf(data = polling_with_distance %>% filter(beyond_15min), \n          color = \"maroon\", size = 1.5, alpha = 0.7) +\n  geom_sf(data = polling_with_distance %>% filter(!beyond_15min), \n          color = \"gray70\", size = 0.5, alpha = 0.3) +\n  theme_void() +\n  labs(title = \"> 15 min walk\") +\n  theme(plot.title = element_text(hjust = 0.5, face = \"bold\"))\n\n# Combine maps\nmap_5min + map_10min + map_15min +\n  plot_annotation(\n    title = \"Philadelphia Polling Places Beyond Certain Walking Distances from Bus Stops\",\n    subtitle = \"Colored dots show polling locations beyond specified walking time to nearest bus stop\",\n    theme = theme(plot.title = element_text(hjust = 0.5, face = \"bold\", size = 14),\n                  plot.subtitle = element_text(hjust = 0.5, size = 10))\n  )\n```\n\n::: {.cell-output-display}\n![](Kakumanu_Sujan_Assignment2_files/figure-html/unnamed-chunk-13-1.png){width=672}\n:::\n:::\n\n\n\n**Analysis requirements:**\n- Clear code comments explaining each step\n- Appropriate CRS transformations\n- Summary statistics or counts\n- At least one map showing your findings\n- Brief interpretation of results (3-5 sentences)\n\n**Your interpretation:**\n\n\nIt seems that there's more interesting analysis that can occur for polling stations more than 5 minutes walk from a bus stop. They seem mostly concentrated along the periphery of the city. Future analysis can be done on the condition of streets around these polling stations (a 5 minute walk across a quaint neighborhood is much easier than a 5 minute walk across/adjacent a busy highway). This can be combined with the accessibility information of polling stations, whether they're in vulnerable census tracts, or near other forms of transit (SEPTA Metro, Trolleys, IndeGo bikeshare, bike lanes, etc.)\n\n## Finally - A few comments about your incorporation of feedback!\nI made sure to hide my API key this time, using R Studio's environment variables. I cleaned up more setup and instruction comments.\n\n---\n\n## Submission Requirements\n\n**What to submit:**\n\n1. **Rendered HTML document posted to your course portfolio** with all code, outputs, maps, and text\n   - Use `embed-resources: true` in YAML so it's a single file\n   - All code should run without errors\n   - All maps and charts should display correctly\n\n**File naming:** `LastName_FirstName_Assignment2.html` and `LastName_FirstName_Assignment2.qmd`\n\n---\n\n",
    "supporting": [
      "Kakumanu_Sujan_Assignment2_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}